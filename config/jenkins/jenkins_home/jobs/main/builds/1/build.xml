<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.36">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>vladquinn</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.15">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@1.5.1">
      <stagesUUID>2d0dc406-3225-4933-8cf5-e0962bb6acea</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@1.5.1">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <post>
                  <conditions>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                      <condition>always</condition>
                      <branch>
                        <name>default</name>
                        <steps>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                            <name>junit</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>testResults</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">**/surefire-reports/*.xml</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                            <name>recordIssues</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>tools</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                                    <value class="string">${[checkStyle(), pmdParser(), spotBugs(useRankAsPriority: true)]}</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        </steps>
                      </branch>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                  </conditions>
                </post>
                <name>SNAPSHOT</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">git branch: &apos;feature0.01&apos;, url: &apos;https://github.com/VladislavBedritsky/EPAM_FARM.git&apos;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                        <name>withSonarQubeEnv</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTSingleArgument">
                          <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                            <value class="string">Sonarqube</value>
                          </value>
                        </args>
                        <children>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                            <name>sh</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>script</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">mvn clean install -Dmaven.test.failure.ignore=true sonar:sonar</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        </children>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                        <name>timeout</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>time</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="int">1</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>unit</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">HOURS</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                        <children>
                          <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                            <name>script</name>
                            <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                              <arguments class="linked-hash-map">
                                <entry>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                    <key>scriptBlock</key>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                    <value class="string">def qg = waitForQualityGate()
                        if (qg.status != &apos;OK&apos;) {
                            mail bcc: &apos;&apos;, body: &apos;Tests in SonarQube are less than 80%&apos;, cc: &apos;&apos;, from: &apos;&apos;, replyTo: &apos;&apos;, subject: &apos;SNAPSHOT FAILED&apos;, to: &apos;uladzislau_biadrytski@epam.com&apos;
                            error &quot;Pipeline aborted due to quality gate failure: ${qg.status}&quot;
                        }</value>
                                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                </entry>
                              </arguments>
                            </args>
                          </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        </children>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTTreeStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>2d0dc406-3225-4933-8cf5-e0962bb6acea</uuid>
          </stages>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <hudson.plugins.git.util.BuildData plugin="git@4.1.1">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/feature0.01</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.1.1">
              <sha1>a72772d77557ac7637786f1815d5b3925005e912</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/feature0.01</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>1</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/VladislavBedritsky/EPAM_FARM.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.git.GitTagAction plugin="git@4.1.1">
      <tags class="hudson.util.CopyOnWriteMap$Tree">
        <entry>
          <string>refs/remotes/origin/feature0.01</string>
          <list/>
        </entry>
      </tags>
      <ws>/var/jenkins_home/workspace/main</ws>
    </hudson.plugins.git.GitTagAction>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@2.10">
      <revisionStates>
        <entry>
          <string>git https://github.com/VladislavBedritsky/EPAM_FARM.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@2.3.1">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
    <hudson.plugins.sonar.action.SonarMarkerAction plugin="sonar@2.11"/>
    <hudson.plugins.sonar.action.SonarAnalysisAction plugin="sonar@2.11">
      <installationName>Sonarqube</installationName>
      <ceTaskId>AXA02hazq7RfaG_kB_W2</ceTaskId>
      <url>http://sonarqube:9000/dashboard?id=org.example%3AEPAM_FARM</url>
      <serverUrl>http://sonarqube:9000</serverUrl>
      <isNew>true</isNew>
      <isSkipped>false</isSkipped>
    </hudson.plugins.sonar.action.SonarAnalysisAction>
    <hudson.tasks.junit.TestResultAction plugin="junit@1.28">
      <descriptions class="concurrent-hash-map"/>
      <failCount>0</failCount>
      <skipCount>0</skipCount>
      <totalCount>2</totalCount>
      <healthScaleFactor>1.0</healthScaleFactor>
      <testData/>
    </hudson.tasks.junit.TestResultAction>
    <io.jenkins.plugins.analysis.core.model.AggregationAction plugin="warnings-ng@7.3.0"/>
    <io.jenkins.plugins.analysis.core.model.ResultAction plugin="warnings-ng@7.3.0">
      <result>
        <id>checkstyle</id>
        <totals>
          <totalErrorSize>22</totalErrorSize>
          <totalHighSize>0</totalHighSize>
          <totalNormalSize>0</totalNormalSize>
          <totalLowSize>0</totalLowSize>
          <newErrorSize>0</newErrorSize>
          <newHighSize>0</newHighSize>
          <newNormalSize>0</newNormalSize>
          <newLowSize>0</newLowSize>
          <deltaErrorSize>0</deltaErrorSize>
          <deltaHighSize>0</deltaHighSize>
          <deltaNormalSize>0</deltaNormalSize>
          <deltaLowSize>0</deltaLowSize>
          <fixedSize>0</fixedSize>
          <totalSizeBySeverity>
            <entry>
              <edu.hm.hafner.analysis.Severity plugin="analysis-model-api@7.0.4">
                <name>HIGH</name>
              </edu.hm.hafner.analysis.Severity>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity plugin="analysis-model-api@7.0.4">
                <name>LOW</name>
              </edu.hm.hafner.analysis.Severity>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity plugin="analysis-model-api@7.0.4">
                <name>ERROR</name>
              </edu.hm.hafner.analysis.Severity>
              <int>22</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity plugin="analysis-model-api@7.0.4">
                <name>NORMAL</name>
              </edu.hm.hafner.analysis.Severity>
              <int>0</int>
            </entry>
          </totalSizeBySeverity>
          <newSizeBySeverity>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../totalSizeBySeverity/entry/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../totalSizeBySeverity/entry[2]/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../totalSizeBySeverity/entry[3]/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../totalSizeBySeverity/entry[4]/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
          </newSizeBySeverity>
        </totals>
        <sizePerOrigin>
          <entry>
            <string>checkstyle</string>
            <int>22</int>
          </entry>
        </sizePerOrigin>
        <errors/>
        <messages>
          <string>Searching for all files in &apos;/var/jenkins_home/workspace/main&apos; that match the pattern &apos;**/checkstyle-result.xml&apos;</string>
          <string>-&gt; found 1 file</string>
          <string>Successfully parsed file /var/jenkins_home/workspace/main/target/checkstyle-result.xml</string>
          <string>-&gt; found 22 issues (skipped 0 duplicates)</string>
          <string>Post processing issues on &apos;Master&apos; with source code encoding &apos;UTF-8&apos;</string>
          <string>Resolving absolute file names for all issues in source directories &apos;[/var/jenkins_home/workspace/main]&apos;</string>
          <string>-&gt; 0 resolved, 0 unresolved, 3 already resolved</string>
          <string>Resolving module names from module definitions (build.xml, pom.xml, or Manifest.mf files)</string>
          <string>-&gt; resolved module names for 22 issues</string>
          <string>Resolving package names (or namespaces) by parsing the affected files</string>
          <string>-&gt; resolved package names of 3 affected files</string>
          <string>No filter has been set, publishing all 22 issues</string>
          <string>Creating fingerprints for all affected code blocks to track issues over different builds</string>
          <string>-&gt; created fingerprints for 22 issues</string>
          <string>Copying affected files to Jenkins&apos; build folder &apos;/var/jenkins_home/jobs/main/builds/1/files-with-issues&apos;</string>
          <string>-&gt; 3 copied, 0 not in workspace, 0 not-found, 0 with I/O error</string>
          <string>No valid reference build found that meets the criteria (NO_JOB_FAILURE - SUCCESSFUL_QUALITY_GATE)</string>
          <string>All reported issues will be considered outstanding</string>
          <string>No quality gates have been set - skipping</string>
          <string>Health report is disabled - skipping</string>
        </messages>
        <referenceBuildId></referenceBuildId>
        <noIssuesSinceBuild>-1</noIssuesSinceBuild>
        <successfulSinceBuild>-1</successfulSinceBuild>
        <qualityGateStatus>INACTIVE</qualityGateStatus>
        <sizePerSeverity/>
        <newSizePerSeverity/>
      </result>
      <healthDescriptor>
        <healthy>0</healthy>
        <unhealthy>0</unhealthy>
        <minimumSeverity reference="../../result/totals/totalSizeBySeverity/entry[2]/edu.hm.hafner.analysis.Severity"/>
      </healthDescriptor>
      <id>checkstyle</id>
      <name></name>
      <charset>UTF-8</charset>
      <trendChartType>AGGREGATION_TOOLS</trendChartType>
    </io.jenkins.plugins.analysis.core.model.ResultAction>
    <io.jenkins.plugins.analysis.core.model.ResultAction plugin="warnings-ng@7.3.0">
      <result>
        <id>pmd</id>
        <totals>
          <totalErrorSize>0</totalErrorSize>
          <totalHighSize>0</totalHighSize>
          <totalNormalSize>0</totalNormalSize>
          <totalLowSize>0</totalLowSize>
          <newErrorSize>0</newErrorSize>
          <newHighSize>0</newHighSize>
          <newNormalSize>0</newNormalSize>
          <newLowSize>0</newLowSize>
          <deltaErrorSize>0</deltaErrorSize>
          <deltaHighSize>0</deltaHighSize>
          <deltaNormalSize>0</deltaNormalSize>
          <deltaLowSize>0</deltaLowSize>
          <fixedSize>0</fixedSize>
          <totalSizeBySeverity>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry[2]/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry[3]/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry[4]/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
          </totalSizeBySeverity>
          <newSizeBySeverity>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry[2]/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry[3]/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry[4]/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
          </newSizeBySeverity>
        </totals>
        <sizePerOrigin>
          <entry>
            <string>pmd</string>
            <int>0</int>
          </entry>
        </sizePerOrigin>
        <errors/>
        <messages>
          <string>Searching for all files in &apos;/var/jenkins_home/workspace/main&apos; that match the pattern &apos;**/pmd.xml&apos;</string>
          <string>-&gt; found 1 file</string>
          <string>Successfully parsed file /var/jenkins_home/workspace/main/target/pmd.xml</string>
          <string>-&gt; found 0 issues (skipped 0 duplicates)</string>
          <string>No valid reference build found that meets the criteria (NO_JOB_FAILURE - SUCCESSFUL_QUALITY_GATE)</string>
          <string>All reported issues will be considered outstanding</string>
          <string>No quality gates have been set - skipping</string>
          <string>Health report is disabled - skipping</string>
        </messages>
        <referenceBuildId></referenceBuildId>
        <noIssuesSinceBuild>1</noIssuesSinceBuild>
        <successfulSinceBuild>-1</successfulSinceBuild>
        <qualityGateStatus>INACTIVE</qualityGateStatus>
        <sizePerSeverity/>
        <newSizePerSeverity/>
      </result>
      <healthDescriptor>
        <healthy>0</healthy>
        <unhealthy>0</unhealthy>
        <minimumSeverity reference="../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry[2]/edu.hm.hafner.analysis.Severity"/>
      </healthDescriptor>
      <id>pmd</id>
      <name></name>
      <charset>UTF-8</charset>
      <trendChartType>AGGREGATION_TOOLS</trendChartType>
    </io.jenkins.plugins.analysis.core.model.ResultAction>
    <io.jenkins.plugins.analysis.core.model.ResultAction plugin="warnings-ng@7.3.0">
      <result>
        <id>spotbugs</id>
        <totals>
          <totalErrorSize>0</totalErrorSize>
          <totalHighSize>0</totalHighSize>
          <totalNormalSize>0</totalNormalSize>
          <totalLowSize>0</totalLowSize>
          <newErrorSize>0</newErrorSize>
          <newHighSize>0</newHighSize>
          <newNormalSize>0</newNormalSize>
          <newLowSize>0</newLowSize>
          <deltaErrorSize>0</deltaErrorSize>
          <deltaHighSize>0</deltaHighSize>
          <deltaNormalSize>0</deltaNormalSize>
          <deltaLowSize>0</deltaLowSize>
          <fixedSize>0</fixedSize>
          <totalSizeBySeverity>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry[2]/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry[3]/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry[4]/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
          </totalSizeBySeverity>
          <newSizeBySeverity>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry[2]/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry[3]/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
            <entry>
              <edu.hm.hafner.analysis.Severity reference="../../../../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry[4]/edu.hm.hafner.analysis.Severity"/>
              <int>0</int>
            </entry>
          </newSizeBySeverity>
        </totals>
        <sizePerOrigin>
          <entry>
            <string>spotbugs</string>
            <int>0</int>
          </entry>
        </sizePerOrigin>
        <errors/>
        <messages>
          <string>Searching for all files in &apos;/var/jenkins_home/workspace/main&apos; that match the pattern &apos;**/spotbugsXml.xml&apos;</string>
          <string>-&gt; found 1 file</string>
          <string>Successfully parsed file /var/jenkins_home/workspace/main/target/spotbugsXml.xml</string>
          <string>-&gt; found 0 issues (skipped 0 duplicates)</string>
          <string>No valid reference build found that meets the criteria (NO_JOB_FAILURE - SUCCESSFUL_QUALITY_GATE)</string>
          <string>All reported issues will be considered outstanding</string>
          <string>No quality gates have been set - skipping</string>
          <string>Health report is disabled - skipping</string>
        </messages>
        <referenceBuildId></referenceBuildId>
        <noIssuesSinceBuild>1</noIssuesSinceBuild>
        <successfulSinceBuild>-1</successfulSinceBuild>
        <qualityGateStatus>INACTIVE</qualityGateStatus>
        <sizePerSeverity/>
        <newSizePerSeverity/>
      </result>
      <healthDescriptor>
        <healthy>0</healthy>
        <unhealthy>0</unhealthy>
        <minimumSeverity reference="../../../io.jenkins.plugins.analysis.core.model.ResultAction/result/totals/totalSizeBySeverity/entry[2]/edu.hm.hafner.analysis.Severity"/>
      </healthDescriptor>
      <id>spotbugs</id>
      <name></name>
      <charset>UTF-8</charset>
      <trendChartType>AGGREGATION_TOOLS</trendChartType>
    </io.jenkins.plugins.analysis.core.model.ResultAction>
  </actions>
  <queueId>1</queueId>
  <timestamp>1581434520010</timestamp>
  <startTime>1581434520169</startTime>
  <result>SUCCESS</result>
  <duration>167872</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>pipeline {
    agent any
    stages {
        stage (&apos;SNAPSHOT&apos;) {
            steps {
                
                script {
                    git branch: &apos;feature0.01&apos;, url: &apos;https://github.com/VladislavBedritsky/EPAM_FARM.git&apos;
                }

                withSonarQubeEnv(&apos;Sonarqube&apos;) {
                    sh &apos;mvn clean install -Dmaven.test.failure.ignore=true sonar:sonar&apos;
                }

                timeout(time: 1, unit: &apos;HOURS&apos;) {
                    script {
                        def qg = waitForQualityGate()
                        if (qg.status != &apos;OK&apos;) {
                            mail bcc: &apos;&apos;, body: &apos;Tests in SonarQube are less than 80%&apos;, cc: &apos;&apos;, from: &apos;&apos;, replyTo: &apos;&apos;, subject: &apos;SNAPSHOT FAILED&apos;, to: &apos;uladzislau_biadrytski@epam.com&apos;
                            error &quot;Pipeline aborted due to quality gate failure: ${qg.status}&quot;
                        }
                    }
                }
            }
            post {
                always {
                    junit &apos;**/surefire-reports/*.xml&apos;
                    recordIssues(tools: [checkStyle(), pmdParser(), spotBugs(useRankAsPriority: true)])
                }
            }
        }
    }
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>5166314582</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>6201654517</long>
      </entry>
      <entry>
        <string>run</string>
        <long>16302413609</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>948343007</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>2619482683</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>32</iota>
    <head>1:32</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.1.1">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/VladislavBedritsky/EPAM_FARM.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches class="singleton-list">
          <hudson.plugins.git.BranchSpec>
            <name>*/feature0.01</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.LocalBranch>
            <localBranch>feature0.01</localBranch>
          </hudson.plugins.git.extensions.impl.LocalBranch>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/jenkins_home/workspace/main</workspace>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>